#[Comi] Bolnica2-laboratory-service #ime na sonarqube
#[Comi] SONAR_PROJECT_KEY="Bolnica2-laboratory-service"
#[Comi] Project display name : Bolnica2-laboratory-service
# Vezbe 7
# CI job za pokretanje SonarQube-a.
# Obratiti paznju na komentare "PROMENITI PRI KOPIRANJU"
presubmits:
  # PROMENITI PRI KOPIRANJU
  # Name treba da bude u formatu "pull-<tim>-<naziv-servisa>-sonarqube", npr.
  # pull-banka-1-user-service-sonarqube
  - name: pull-bolnica2-laboratory-service-sonarqube
    labels:
      preset-github-ro-token: "true"
      preset-sonar-token: "true"
    always_run: true
    decorate: true
    spec:
      containers:
        - image: harbor.k8s.elab.rs/base-images/base:java-19-node-18-docker
          command:
            - /bin/bash
            - -c
            - |
              set -euo pipefail
              # PROMENITI PRI KOPIRANJU
              # Ovaj parametar dobijate od SonarQube-a prilikom kreiranja projekta.
              SONAR_PROJECT_KEY="Bolnica2-laboratory-service"
              # Ovde treba da unesete kako vam se projekat zove.
              # Ovaj naziv ce se prikazati u pregeldu projekata na SonarQube-u.
              # Primer: Bolnica2-user-service
              # Pozeljno je da naziv projekta pocinje sa nazivom vaseg tima.
              SONAR_PROJECT_NAME="Bolnica2-laboratory-service"
              # Ovo je naziv foldera gde se nalazi mikroservis.
              SERVICE_NAME="laboratory-service"
              start-docker.sh
              head_ref=$(curl -L --silent -H "Accept: application/vnd.github+json" -H "Authorization: Bearer $GITHUB_TOKEN" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/RAF-SI-2022/"$REPO_NAME"/pulls/"$PULL_NUMBER" | jq -r .head.ref)
              export PULL_HEAD_REF="$head_ref"
              # PROMENITI PRI KOPIRANJU
              # Ovde treba do pokrenete sve mikroservise i dependencies koji vam trebaju
              # za integracione i end to end testove.
              # Primeri komandi (odkomentirasti neku komandu ili dodati neku svoju):
              # docker compose up -d mysql-user
              # docker compose --profile user-service up -d
              docker compose up -d redis laboratory-db
              branch=$PULL_HEAD_REF
              curr_branch=$(git rev-parse --abbrev-ref HEAD)
              if [[ "$branch" == "$curr_branch" ]]; then
                branch="$PULL_HEAD_REF"-1
              fi
              git branch $branch
              git reset --hard HEAD~1
              git reset --hard HEAD~1
              git checkout $PULL_HEAD_REF
              git checkout $branch
              cd "$SERVICE_NAME"
              mvn clean verify sonar:sonar -Pcoverage \
                -Dsonar.host.url=https://sonar.k8s.elab.rs \
                -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
                -Dsonar.projectName="$SONAR_PROJECT_NAME" \
                -Dsonar.login="$SONARQUBE_TOKEN" \
                -Dsonar.pullrequest.key="$PULL_NUMBER" \
                -Dsonar.pullrequest.branch="$PULL_HEAD_REF" \
                -Dsonar.pullrequest.base="$PULL_BASE_REF" \
                -Dsonar.qualitygate.wait=true
          securityContext:
            privileged: true
          imagePullPolicy: Always
postsubmits:
  # PROMENITI PRI KOPIRANJU
  # Name treba da bude u formatu "post-<tim>-<naziv-servisa>-sonarqube", npr.
  # post-banka-1-user-service-sonarqube
  - name: post-bolnica-2-laboratory-service-sonarqube
    labels:
      preset-github-ro-token: "true"
      preset-sonar-token: "true"
    always_run: true
    decorate: true
    spec:
      containers:
        - image: harbor.k8s.elab.rs/base-images/base:java-19-node-18-docker
          command:
            - /bin/bash
            - -c
            - |
              set -euo pipefail
              # PROMENITI PRI KOPIRANJU
              # Ovaj parametar dobijate od SonarQube-a prilikom kreiranja projekta.
              SONAR_PROJECT_KEY="Bolnica2-laboratory-service"
              # Ovde treba da unesete kako vam se projekat zove.
              # Ovaj naziv ce se prikazati u pregeldu projekata na SonarQube-u.
              # Primer: Banka-1 - korisnicki servis
              # Pozeljno je da naziv projekta pocinje sa nazivom vaseg tima.
              SONAR_PROJECT_NAME="Bolnica2-laboratory-service"
              # Ovo je naziv foldera gde se nalazi mikroservis.
              SERVICE_NAME="laboratory-service"
              start-docker.sh
              # PROMENITI PRI KOPIRANJU
              # Ovde treba do pokrenete sve mikroservise i dependencies koji vam trebaju
              # za integracione i end to end testove.
              # Primeri komandi (odkomentirasti neku komandu ili dodati neku svoju):
              # docker compose up -d mysql-user
              # docker compose --profile user-service up -d
              docker compose up -d redis laboratory-db
              cd "$SERVICE_NAME"
              
              ref=$(git rev-parse --abbrev-ref HEAD)
              mvn clean verify sonar:sonar -Pcoverage \
                -Dsonar.host.url=https://sonar.k8s.elab.rs \
                -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
                -Dsonar.projectName="$SONAR_PROJECT_NAME" \
                -Dsonar.login="$SONARQUBE_TOKEN" \
                -Dsonar.branch.name="$ref" \
                -Dsonar.qualitygate.wait=true
          securityContext:
            privileged: true
          imagePullPolicy: Always
